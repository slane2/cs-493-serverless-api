
service: music-api-node
frameworkVersion: '2'

custom:
  tableName: 'music'
  dynamodb:
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamManagedPolicies: 
    - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
    - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
    - arn:aws:iam::aws:policy/AmazonSQSFullAccess

  Resource:
        - { "Fn::GetAtt": ["MusicDynamoDBTable", "Arn" ] }
  environment:
    MUSIC_TABLE: ${self:custom.tableName}


plugins:
  - serverless-offline
  - serverless-express
  - serverless-iam-roles-per-function

functions:
  sques:
    handler: squeshandler.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MyQueue
              - Arn

  auth:
    handler: auth.handler

  hello:
    handler: handler.hello
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - 's3:ListBucket'
        Resource: "arn:aws:s3:::shaylalalala522"
      - Effect: 'Allow'
        Action:
          - 's3:ListObjects'
        Resource: "arn:aws:s3:::shaylalalala522"
      - Effect: 'Allow'
        Action:
          - 's3:GetObject'
        Resource: "arn:aws:s3:::shaylalalala522"
    events:
      # - httpApi:
      #     path: /dotify
      #     method: get
      - http:
        method: ANY
        path: /{proxy+}
        cors: true
        authorizer:
          name: auth
          type: request
          identitySource: method.request.header.authorization
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'
  getGenres:
    handler: index.handler
    events:
      - http: 'GET /genres'

  play:
    handler: index.handler
    events:
      - http: 'POST /play'

resources:
  Resources:
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "MyQueue"
    MusicDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          # partition key
          - AttributeName: "pk"
            AttributeType: "S"
            #sort key
          - AttributeName: "sk"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "pk"
            KeyType: "HASH"
          - AttributeName: "sk"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'music'
